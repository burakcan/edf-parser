digraph {
	rankdir=LR;
	node [shape=plaintext];
	subgraph cluster__edf {
		label="Edf";
		graph[style=dotted];

		edf__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			<TR><TD PORT="header_pos">0</TD><TD PORT="header_size">...</TD><TD>Header</TD><TD PORT="header_type">header</TD></TR>
			<TR><TD PORT="body_pos">...</TD><TD PORT="body_size">...</TD><TD>Body</TD><TD PORT="body_type">body</TD></TR>
		</TABLE>>];
		subgraph cluster__header {
			label="Edf::Header";
			graph[style=dotted];

			header__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="version_pos">0</TD><TD PORT="version_size">8</TD><TD>str(ASCII)</TD><TD PORT="version_type">version</TD></TR>
				<TR><TD PORT="patient_id_pos">8</TD><TD PORT="patient_id_size">80</TD><TD>str(ASCII)</TD><TD PORT="patient_id_type">patient_id</TD></TR>
				<TR><TD PORT="recording_id_pos">88</TD><TD PORT="recording_id_size">80</TD><TD>str(ASCII)</TD><TD PORT="recording_id_type">recording_id</TD></TR>
				<TR><TD PORT="start_date_pos">168</TD><TD PORT="start_date_size">8</TD><TD>str(ASCII)</TD><TD PORT="start_date_type">start_date</TD></TR>
				<TR><TD PORT="start_time_pos">176</TD><TD PORT="start_time_size">8</TD><TD>str(ASCII)</TD><TD PORT="start_time_type">start_time</TD></TR>
				<TR><TD PORT="header_num_bytes_pos">184</TD><TD PORT="header_num_bytes_size">8</TD><TD>str(ASCII)</TD><TD PORT="header_num_bytes_type">header_num_bytes</TD></TR>
				<TR><TD PORT="reserved_pos">192</TD><TD PORT="reserved_size">44</TD><TD>str(ASCII)</TD><TD PORT="reserved_type">reserved</TD></TR>
				<TR><TD PORT="num_data_records_pos">236</TD><TD PORT="num_data_records_size">8</TD><TD>str(ASCII)</TD><TD PORT="num_data_records_type">num_data_records</TD></TR>
				<TR><TD PORT="data_duration_pos">244</TD><TD PORT="data_duration_size">8</TD><TD>str(ASCII)</TD><TD PORT="data_duration_type">data_duration</TD></TR>
				<TR><TD PORT="num_signals_pos">252</TD><TD PORT="num_signals_size">4</TD><TD>str(ASCII)</TD><TD PORT="num_signals_type">num_signals</TD></TR>
				<TR><TD PORT="labels_pos">256</TD><TD PORT="labels_size">16</TD><TD>str(ASCII)</TD><TD PORT="labels_type">labels</TD></TR>
				<TR><TD COLSPAN="4" PORT="labels__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="transducers_pos">...</TD><TD PORT="transducers_size">80</TD><TD>str(ASCII)</TD><TD PORT="transducers_type">transducers</TD></TR>
				<TR><TD COLSPAN="4" PORT="transducers__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="phys_dimensions_pos">...</TD><TD PORT="phys_dimensions_size">8</TD><TD>str(ASCII)</TD><TD PORT="phys_dimensions_type">phys_dimensions</TD></TR>
				<TR><TD COLSPAN="4" PORT="phys_dimensions__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="phys_mins_pos">...</TD><TD PORT="phys_mins_size">8</TD><TD>str(ASCII)</TD><TD PORT="phys_mins_type">phys_mins</TD></TR>
				<TR><TD COLSPAN="4" PORT="phys_mins__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="phys_maxes_pos">...</TD><TD PORT="phys_maxes_size">8</TD><TD>str(ASCII)</TD><TD PORT="phys_maxes_type">phys_maxes</TD></TR>
				<TR><TD COLSPAN="4" PORT="phys_maxes__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="dig_mins_pos">...</TD><TD PORT="dig_mins_size">8</TD><TD>str(ASCII)</TD><TD PORT="dig_mins_type">dig_mins</TD></TR>
				<TR><TD COLSPAN="4" PORT="dig_mins__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="dig_maxes_pos">...</TD><TD PORT="dig_maxes_size">8</TD><TD>str(ASCII)</TD><TD PORT="dig_maxes_type">dig_maxes</TD></TR>
				<TR><TD COLSPAN="4" PORT="dig_maxes__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="prefiltering_pos">...</TD><TD PORT="prefiltering_size">80</TD><TD>str(ASCII)</TD><TD PORT="prefiltering_type">prefiltering</TD></TR>
				<TR><TD COLSPAN="4" PORT="prefiltering__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="num_samples_pos">...</TD><TD PORT="num_samples_size">8</TD><TD>str(ASCII)</TD><TD PORT="num_samples_type">num_samples</TD></TR>
				<TR><TD COLSPAN="4" PORT="num_samples__repeat">repeat ns times</TD></TR>
				<TR><TD PORT="signals_reserved_pos">...</TD><TD PORT="signals_reserved_size">32</TD><TD>str(ASCII)</TD><TD PORT="signals_reserved_type">signals_reserved</TD></TR>
				<TR><TD COLSPAN="4" PORT="signals_reserved__repeat">repeat ns times</TD></TR>
			</TABLE>>];
			header__inst__ns [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
				<TR><TD>ns</TD><TD>num_signals.to_i</TD></TR>
			</TABLE>>];
			header__inst__ndr [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">id</TD><TD BGCOLOR="#E0FFE0">value</TD></TR>
				<TR><TD>ndr</TD><TD>num_data_records.to_i</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__body {
			label="Edf::Body";
			graph[style=dotted];

			body__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="signals_pos">0</TD><TD PORT="signals_size">...</TD><TD>Signal</TD><TD PORT="signals_type">signals</TD></TR>
				<TR><TD COLSPAN="4" PORT="signals__repeat">repeat _root.header.ns times</TD></TR>
			</TABLE>>];
			subgraph cluster__data_recording {
				label="Edf::Body::DataRecording";
				graph[style=dotted];

				data_recording__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
					<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
					<TR><TD PORT="data_pos">0</TD><TD PORT="data_size">2</TD><TD>u2le</TD><TD PORT="data_type">data</TD></TR>
					<TR><TD COLSPAN="4" PORT="data__repeat">repeat _root.header.num_samples[_parent.signal_index].to_i times</TD></TR>
				</TABLE>>];
			}
			subgraph cluster__signal {
				label="Edf::Body::Signal";
				graph[style=dotted];

				signal__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
					<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
					<TR><TD PORT="recordings_pos">0</TD><TD PORT="recordings_size">...</TD><TD>DataRecording</TD><TD PORT="recordings_type">recordings</TD></TR>
					<TR><TD COLSPAN="4" PORT="recordings__repeat">repeat _root.header.ndr times</TD></TR>
				</TABLE>>];
			}
		}
	}
	edf__seq:header_type -> header__seq [style=bold];
	edf__seq:body_type -> body__seq [style=bold];
	header__inst__ns:ns_type -> header__seq:labels__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:transducers__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:phys_dimensions__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:phys_mins__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:phys_maxes__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:dig_mins__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:dig_maxes__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:prefiltering__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:num_samples__repeat [color="#404040"];
	header__inst__ns:ns_type -> header__seq:signals_reserved__repeat [color="#404040"];
	header__seq:num_signals_type -> header__inst__ns [color="#404040"];
	header__seq:num_data_records_type -> header__inst__ndr [color="#404040"];
	body__seq:signals_type -> signal__seq [style=bold];
	header__inst__ns:ns_type -> body__seq:signals__repeat [color="#404040"];
	header__seq:num_samples_type -> data_recording__seq:data__repeat [color="#404040"];
	signal__params:signal_index_type -> data_recording__seq:data__repeat [color="#404040"];
	signal__seq:recordings_type -> data_recording__seq [style=bold];
	header__inst__ndr:ndr_type -> signal__seq:recordings__repeat [color="#404040"];
}
